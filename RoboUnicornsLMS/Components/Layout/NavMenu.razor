@using Microsoft.AspNetCore.Components.Authorization
@using RoboUnicornsLMS.Services

@inject AuthenticationStateProvider AuthenticationStateProvider

      <header>
            <div class="container">
                <h1 class="display-4 robo">ROBO UNICORNS </h1>
            </div>
            
       

<nav class="navbar navbar-expand-lg">
    <div class="container">
        @*TODO: ADD COLLAPSABLE NAVBAR?*@
            <ul class="navbar-nav">
                <li class="nav-item">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                            <span class="bi bi-list-nested-nav-menu link-hover" aria-hidden="true">Home</span>
                        </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="ListCourses">
                            <span class="bi bi-list-nested-nav-menu link-hover" aria-hidden="true">Courses</span>
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="SchoolDirectory">
                        <span class="bi bi-list-nested-nav-menu link-hover" aria-hidden="true">School Directory</span>
                    @* TODO: ADD PROPER PAGE/LINK FOR SCHOOL DIRECTORY. THE VIEW FOR ALL STUDENTS. *@
                    </NavLink>
                </li>
                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Account/Manage" Match="NavLinkMatch.All">Profile</NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Account/Manage/Email">Email</NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Account/Manage/ChangePassword">Password</NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Account/Manage/TwoFactorAuthentication">Two-factor authentication</NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Account/Manage/PersonalData">Personal data</NavLink>
                        </li>
                        <li class="nav-item">
                            <EditForm @onsubmit="Logout" Context="logoutForm">
                                <button type="submit" class="nav-link btn btn-link">Logout</button>
                            </EditForm>
                        </li>
                    </Authorized>
                    <NotAuthorized>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Identity/Account/Login">Login</NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Identity/Account/Register">Register</NavLink>
                        </li>
                    </NotAuthorized>
                </AuthorizeView>
            </ul>
       
    </div>
</nav>
</header>

<button @onclick="Logout">Log out</button>

@code {
    private void Logout()
    {
        if (AuthenticationStateProvider is CustomAuthenticationStateProvider customAuthStateProvider)
        {
            customAuthStateProvider.NotifyUserLogout();
        }
    }
}
