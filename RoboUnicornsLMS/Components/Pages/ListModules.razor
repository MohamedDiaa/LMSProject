@page "/ListModules/{courseId:int}"
@rendermode InteractiveServer
@inject HttpClient HttpClient

<PageTitle>Modules</PageTitle>


<h3>Modules</h3>
<table>

    <tr>
        <th>@nameof(Module.Title)</th>
        <th>@nameof(Module.Description)</th>
    </tr>
    <tbody>
    @foreach (Module x in modules)
    {
        <tr>
            <td>
                <p>@x.Title</p>
            </td>
            <td>
                <p>@x.Description</p>
            </td>
            <td>
                <p>@x.Start.ToShortDateString()</p>
            </td>
            <td>
                <p>@x.End.ToShortDateString()</p>
            </td>
            <td>
                <a href="@($"moduleedit/{x.Id}")" class="btn btn-primary">Edit</a>
            </td>
        </tr>
    }
    </tbody>
</table>

<div class="mb-3">
    <a href="@($"course/{courseId}/moduleadd")" class="btn btn-primary">Add New Module</a>
</div>

@code {

    [Parameter]
    public int courseId { get; set; }


    List<Module> modules = new();
    
    protected override async Task OnInitializedAsync()
    {
        // await HttpClient.GetAsync("/api/courses");


        modules = await HttpClient.GetFromJsonAsync<List<Module>>($"/api/Modules/Course/{courseId}") ?? new();


    }

}
