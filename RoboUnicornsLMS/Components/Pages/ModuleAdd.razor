@page "/course/{CourseId:int}/moduleadd"
@using LMS.api.Model
@using System.Net
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Add New Module</h3>

@if (!Saved) {
<form method="post" data-enhance @onsubmit="OnSubmit" @formname="add-module-form">
    <AntiforgeryToken />

    <div class="mb-3">
        <label class="form-label">Title</label>
        <InputText class="form-control" @bind-Value="@FormModel.Title" placeholder="Enter title" />
    </div>

    <div class="mb-3">
        <label class="form-label">Description</label>
        <InputTextArea rows="3" class="form-control" @bind-Value="@FormModel.Description" placeholder="Enter description"></InputTextArea>
    </div>

    <div class="mb-3">
        <label class="form-label">Start date</label>
        <InputDate class="form-control" @bind-Value="@FormModel.Start" placeholder="Enter start date" />
    </div>

    <div class="mb-3">
        <label class="form-label">End date</label>
        <InputDate class="form-control" @bind-Value="@FormModel.End" placeholder="Enter end date"></InputDate>
    </div>

    <div class="mb-3">
        <button type="submit" class="btn btn-primary">Add Module</button>
    </div>
</form>
}
else
{
    <div class="alert @StatusClass">@Message</div>
    <button type="button" class="btn btn-outline-primary" @onclick="@NavigateToOverview">Back to overview</button>
}

@code {
    [Parameter]
    public int CourseId { get; set; }

    [SupplyParameterFromForm]
    private ModuleDTO FormModel { get; set; }

    protected bool Saved { get; set; }

    public string Message { get; set; }
    public string StatusClass { get; set; }

    protected override void OnInitialized()
    {
        FormModel ??= new ModuleDTO();
    }

    private async Task OnSubmit()
    {
        var postBody = new
        {
            Title = FormModel.Title,
            Description = FormModel.Description,
            Start = FormModel.Start,
            End = FormModel.End,
            CourseId = CourseId
        };

        var response = await HttpClient.PostAsJsonAsync("/api/modules", postBody);
        // var response = new HttpResponseMessage() { StatusCode = HttpStatusCode.BadRequest };
        if (response.IsSuccessStatusCode)
        {
            Message = "Module successfully added!";
            StatusClass = "alert-success";
        }
        else
        {
            Message = "Oops! Something went wrong. Please try again.";
            StatusClass = "alert-danger";
        }
        Saved = true;
    }

    public void NavigateToOverview()
    {
        NavigationManager.NavigateTo($"/ListModules/{CourseId}");
    }
}
